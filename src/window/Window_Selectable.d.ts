declare class Window_Selectable extends Window_Base {
	private _index: number;
	private _cursorFixed: boolean;
	private _cursorAll: boolean;
	private _stayCount: number;
	private _helpWindow: Window_Help;
	private _handlers: {};
	private _touching: boolean;
	private _scrollX: number;
	private _scrollY: number;
	
	constructor(x: number, y: number, width: number, height: number);
	index(): number;
	cursorFixed(): boolean;
	setCursorFixed(): void;
	cursorAll(): boolean;
	setCursorAll(): void;
	maxCols(): number;
	maxItems(): number;
	spacing(): number;
	itemHeight(): number;
	maxRows(): number;
	activate(): void;
	deactivate(): void;
	select(index: number): void;
	deselect(): void;
	reselect(): void;
	row(): number;
	topRow(): number;
	maxTopRow(): number;
	setTopRow(row: number): void;
	resetScroll(): void;
	maxPageRows(): number;
	maxPageItems(): number;
	setBottomRow(row: number): void;
	topIndex(): number;
	itemRect(index: number): Rectangle;
	itemRectForText(index: number): Rectangle;
	setHelpWindow(helpWindow: Window_Help): void;
	showHelpWindow(): void;
	hideHelpWindow(): void;
	setHandler(symbol: string, method: Function): void;
	isHandled(symbol: string): boolean;
	callHandler(symbol: string): void;
	isOpenAndActive(): boolean;
	isCursorMovable(): boolean;
	cursorDown(wrap: boolean): void;
	cursorUp(wrap: boolean): void;
	cursorRight(wrap: boolean): void;
	cursorLeft(wrap: boolean): void;
	cursorPagedown(): void;
	cursorPageup(): void;
	scrollDown(): void;
	scrollUp(): void;
	update(): void;
	updateArrows(): void;
	processCursorMove(): void;
	processHandling(): void;
	processWheel(): void;
	processTouch(): void;
	isTouchedInsideFrame(): boolean;
	onTouch(): void;
	hitTest(x: number, y: number): number;
	isContentsArea(x: number, y: number): boolean;
	isTouchOkEnabled(): boolean;
	isOkEnabled(): boolean;
	isCancelEnabled(): boolean;
	isOkTriggered(): boolean;
	isCancelTriggered(): boolean;
	processOk(): void;
	playOkSound(): void;
	playBuzzerSound(): void;
	callOkHandler(): void;
	processCancel(): void;
	callCancelHandler(): void;
	processPageup(): void;
	processPagedown(): void;
	updateInputData(): void;
	updateCursor(): void;
	isCursorVisible(): boolean;
	ensureCursorVisible(): void;
	callUpdateHelp(): void;
	updateHelp(): void;
	setHelpWindowItem(item: any): void;
	isCurrentItemEnabled(): boolean;
	drawAllItems(): void;
	drawItem(index: number): void;
	clearItem(index: number): void;
	redrawItem(index: number): void;
	redrawCurrentItem(): void;
	refresh(): void;
}